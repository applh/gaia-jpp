gzip on;
gzip_vary on;
gzip_proxied any;
gzip_comp_level 6;
gzip_buffers 16 8k;
gzip_http_version 1.1;
gzip_min_length 256;

gzip_types
  application/atom+xml
  application/geo+json
  application/javascript
  application/x-javascript
  application/json
  application/ld+json
  application/manifest+json
  application/rdf+xml
  application/rss+xml
  application/xhtml+xml
  application/xml
  font/eot
  font/otf
  font/ttf
  image/svg+xml
  text/css
  text/javascript
  text/plain
  text/xml;
  
server {
    index index.php index.html;
    # as default server, will catch also others domains aliases to localhost
    # (dnsmasq will redirect *.test to localhost)
    server_name localhost;
    error_log  /var/log/nginx/error.log;
    access_log /var/log/nginx/access.log;
    # preserve /var/www/hmtl as root folder for src files
    root /var/www/html/public;

    # https://www.nginx.com/resources/wiki/start/topics/recipes/wordpress/
    location / {
        # This is cool because no php is touched for static content.
        # include the "?$args" part so non-default permalinks doesn't break when using query string
        try_files $uri $uri/ /index.php?$args;
    }

    location ~ \.php$ {
        try_files $uri =404;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        # WARNING: use docker-compose service name here (and not localhost)
        fastcgi_pass php-fpm:9000;
        fastcgi_index index.php;

        include fastcgi_params;
        fastcgi_intercept_errors on;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info;
    }

}

server {
    index index.php index.html;
    server_name app2.test;
    error_log  /var/log/nginx/error.log;
    access_log /var/log/nginx/access.log;
    # preserve /var/www/hmtl as root folder for src files
    root /var/www/html/public;

    # https://www.nginx.com/resources/wiki/start/topics/recipes/wordpress/
    location / {
        # This is cool because no php is touched for static content.
        # include the "?$args" part so non-default permalinks doesn't break when using query string
        try_files $uri $uri/ /index.php?$args;
    }

    location ~ \.php$ {
        try_files $uri =404;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        # WARNING: use docker-compose service name here (and not localhost)
        fastcgi_pass php-fpm2:9000;
        fastcgi_index index.php;

        include fastcgi_params;
        fastcgi_intercept_errors on;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info;
    }

}

server {
    index index.php index.html;
    server_name laravel.test;
    error_log  /var/log/nginx/error.log;
    access_log /var/log/nginx/access.log;
    # preserve /var/www/hmtl as root folder for src files
    root /var/www/html/public;

    # https://www.nginx.com/resources/wiki/start/topics/recipes/wordpress/
    location / {
        # This is cool because no php is touched for static content.
        # include the "?$args" part so non-default permalinks doesn't break when using query string
        try_files $uri $uri/ /index.php?$args;
    }

    location ~ \.php$ {
        try_files $uri =404;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        # WARNING: use docker-compose service name here (and not localhost)
        fastcgi_pass php-fpm3:9000;
        fastcgi_index index.php;

        include fastcgi_params;
        fastcgi_intercept_errors on;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info;
    }

}

server {
    server_name directus.test;
    error_log  /var/log/nginx/error.log;
    access_log /var/log/nginx/access.log;
    # preserve /var/www/hmtl as root folder for src files
    root /var/www/html/public;

    # https://www.nginx.com/resources/wiki/start/topics/recipes/wordpress/
    location / {
        proxy_http_version 1.1;  
        proxy_set_header Upgrade $http_upgrade;  
        proxy_set_header Connection 'upgrade';  
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;

        # use service name from docker-compose.yml
        proxy_pass http://node-directus:8055;
     }

}

server {
    server_name nest.test;
    error_log  /var/log/nginx/error.log;
    access_log /var/log/nginx/access.log;
    # preserve /var/www/hmtl as root folder for src files
    root /var/www/html/public;

    # https://www.nginx.com/resources/wiki/start/topics/recipes/wordpress/
    location / {
        proxy_http_version 1.1;  
        proxy_set_header Upgrade $http_upgrade;  
        proxy_set_header Connection 'upgrade';  
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;

        # use service name from docker-compose.yml
        proxy_pass http://node-nest:3000;
     }

}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;


    server_name localhost;
    index index.php index.html;
    error_log  /var/log/nginx/error.log;
    access_log /var/log/nginx/access.log;
    # leave /var/www/hmtl as root folder for src files
    root /var/www/html/public;

    ssl_certificate /etc/nginx/ssl/localhost.crt;
    ssl_certificate_key /etc/nginx/ssl/localhost.key;

    # https://www.nginx.com/resources/wiki/start/topics/recipes/wordpress/
    location / {
        # This is cool because no php is touched for static content.
        # include the "?$args" part so non-default permalinks doesn't break when using query string
        try_files $uri $uri/ /index.php?$args;
    }

    location ~ \.php$ {
        try_files $uri =404;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_pass php-fpm:9000;
        fastcgi_index index.php;

        include fastcgi_params;
        fastcgi_intercept_errors on;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info;
    }
}